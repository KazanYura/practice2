[{"/home/yura/Downloads/practice2/src/index.js":"1","/home/yura/Downloads/practice2/src/App.js":"2","/home/yura/Downloads/practice2/src/components/Home.js":"3","/home/yura/Downloads/practice2/src/components/DailyView.js":"4","/home/yura/Downloads/practice2/src/components/GlobalView.js":"5","/home/yura/Downloads/practice2/src/components/CustomView.js":"6","/home/yura/Downloads/practice2/src/charts/MyPieChart.js":"7","/home/yura/Downloads/practice2/src/charts/MyLineChart.js":"8","/home/yura/Downloads/practice2/src/charts/MyBarChart.js":"9","/home/yura/Downloads/practice2/src/charts/MyDailyLineChart.js":"10","/home/yura/Downloads/practice2/src/charts/MyDailyBarChart.js":"11","/home/yura/Downloads/practice2/src/charts/CustomLineChart.js":"12","/home/yura/Downloads/practice2/src/charts/CustomBarChart.js":"13"},{"size":225,"mtime":1607782986367,"results":"14","hashOfConfig":"15"},{"size":1765,"mtime":1607359381693,"results":"16","hashOfConfig":"15"},{"size":1163,"mtime":1607782966587,"results":"17","hashOfConfig":"15"},{"size":1862,"mtime":1607792055262,"results":"18","hashOfConfig":"15"},{"size":2077,"mtime":1607784731234,"results":"19","hashOfConfig":"15"},{"size":1807,"mtime":1607794655831,"results":"20","hashOfConfig":"15"},{"size":2245,"mtime":1607784024258,"results":"21","hashOfConfig":"15"},{"size":2327,"mtime":1607783547955,"results":"22","hashOfConfig":"15"},{"size":2941,"mtime":1607784283073,"results":"23","hashOfConfig":"15"},{"size":2292,"mtime":1607789484737,"results":"24","hashOfConfig":"15"},{"size":3023,"mtime":1607790062125,"results":"25","hashOfConfig":"15"},{"size":2920,"mtime":1607794350828,"results":"26","hashOfConfig":"15"},{"size":3544,"mtime":1607794535946,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qm68qq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/yura/Downloads/practice2/src/index.js",[],["56","57"],"/home/yura/Downloads/practice2/src/App.js",[],"/home/yura/Downloads/practice2/src/components/Home.js",[],"/home/yura/Downloads/practice2/src/components/DailyView.js",[],"/home/yura/Downloads/practice2/src/components/GlobalView.js",[],"/home/yura/Downloads/practice2/src/components/CustomView.js",["58"],"/home/yura/Downloads/practice2/src/charts/MyPieChart.js",[],"/home/yura/Downloads/practice2/src/charts/MyLineChart.js",[],"/home/yura/Downloads/practice2/src/charts/MyBarChart.js",["59"],"import React from \"react\";\nimport {\n        BarChart, \n        Bar, \n        Cell, \n        XAxis, \n        YAxis, \n        CartesianGrid, \n        Tooltip, \n        Legend,\n        } from 'recharts';\n\n\nlet mountToNamesDict = {1 : \"Jan\", 2 : \"Feb\", 3 : \"Mar\", 4 : \"Apr\", 5: \"May\", 6 : \"Jun\", 7 : \"Jul\", 8 : \"Aug\", 9 : \"Sep\", 10 : \"Oct\", 11 : \"Nov\", 12 : \"Dec\"};\nlet t_nuclear = 0,t_thermal = 0,t_renewable = 0,t_heat_power = 0,t_hydro = 0,t_pumped_hydro  = 0;\nclass MyBarChart extends React.Component{\n    render(){\n      let data = [];\n      let current_date;\n        let data_import = JSON.parse(localStorage.getItem('data'));\n        Object.entries(data_import).forEach(element => {\n          if (!current_date){\n            current_date = element[1][0].split(' ')[0].split('.')[1] + '.' + element[1][0].split(' ')[0].split('.')[2];\n          }\n          if (element[1][0].split(' ')[0].split('.')[1] + '.' + element[1][0].split(' ')[0].split('.')[2] !== current_date){\n            let text_date = mountToNamesDict[parseInt(current_date.split('.')[0])] + \" \" + current_date.split('.')[1]\n            data.push({name: text_date,\n                       Nuclear:t_nuclear,\n                       Thermal:t_thermal,\n                       Renewable:t_renewable,\n                       Heat_Power: t_heat_power,\n                       Hydro: t_hydro,\n                       Pumped_Hydro: t_pumped_hydro});\n            t_nuclear = 0;\n            t_thermal = 0;\n            t_renewable = 0;\n            t_heat_power = 0;\n            t_hydro = 0;\n            t_pumped_hydro  = 0;\n            current_date = element[1][0].split(' ')[0].split('.')[1] + '.' + element[1][0].split(' ')[0].split('.')[2];\n          }\n          else {\n            t_nuclear += parseInt(element[1][1]);\n            t_thermal += parseInt(element[1][2]);\n            t_renewable += parseInt(element[1][3]);\n            t_heat_power += parseInt(element[1][4]);\n            t_hydro += parseInt(element[1][5]);\n            t_pumped_hydro += parseInt(element[1][6]);\n          }\n      });\n      data = data.reverse();\n      data.pop();\n        return (\n          <BarChart\n            width={1200}\n            height={600}\n            data={data}\n            margin={{\n              top: 20, right: 30, left: 20, bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"Nuclear\" stackId=\"a\" fill=\"#0088AA\" />\n            <Bar dataKey=\"Thermal\" stackId=\"a\" fill=\"#00C49F\" />\n            <Bar dataKey=\"Renewable\" stackId=\"a\" fill=\"#FFBB28\" />\n            <Bar dataKey=\"Heat_Power\" stackId=\"a\" fill=\"#FF8042\" />\n            <Bar dataKey=\"Hydro\" stackId=\"a\" fill=\"#AAFF88\" />\n            <Bar dataKey=\"Pumped_Hydro\" stackId=\"a\" fill=\"#28BBFF\" />\n          </BarChart>\n        );\n      }\n}\nexport default MyBarChart;","/home/yura/Downloads/practice2/src/charts/MyDailyLineChart.js",[],"/home/yura/Downloads/practice2/src/charts/MyDailyBarChart.js",["60"],"/home/yura/Downloads/practice2/src/charts/CustomLineChart.js",[],"/home/yura/Downloads/practice2/src/charts/CustomBarChart.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Cell' is defined but never used.","no-global-assign","no-unsafe-negation"]